package com.food.service;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.food.dto.RestaurantDto;
import com.food.model.Address;
import com.food.model.Restaurant;
import com.food.model.User;
import com.food.repository.AddressRepository;
import com.food.repository.RestaurantRepository;
import com.food.request.CreateRestaurantRequest;

@Service
public class RestaurantServiceImpl implements RestaurantService {

	@Autowired
	private RestaurantRepository restaurantRepository;
	
	@Autowired
	private AddressRepository addressReporitory;
	
	@Autowired
	private UserService userService;
	
	
	@Override
	public Restaurant createRestaurant(CreateRestaurantRequest req, User user) {
		
		Address address = addressReporitory.save(req.getAddress());
		
		Restaurant restaurant = new Restaurant();
		restaurant.setAddress(req.getAddress());
		restaurant.setContactInformation(req.getContactInformation());
		restaurant.setCuisineType(req.getCusineType());
		restaurant.setDescription(req.getDescription());
		restaurant.setImages(req.getImages());
		restaurant.setName(req.getName());
		restaurant.setOpeningHours(req.getOpeningHours());
		restaurant.setRegistrationDate(LocalDateTime.now());
		restaurant.setOwner(user);
		
		return restaurantRepository.save(restaurant);
	}

	@Override
	public Restaurant updateRestaurant(Long restaurantId, CreateRestaurantRequest updatedRequest) throws Exception {
		
		Restaurant restaurant = findRestaurantById(restaurantId);
		
		if (restaurant.getCuisineType() != null) {
			restaurant.setCuisineType(updatedRequest.getCusineType());
		}
		
		if (restaurant.getDescription() != null) {
			restaurant.setDescription(updatedRequest.getDescription());
		}
		
		if (restaurant.getName() != null) {
			restaurant.setName(updatedRequest.getName());
		}
			
		
		return restaurantRepository.save(restaurant);
	}

	@Override
	public void deleteRestaurant(Long restaurantId) throws Exception {
		
		Restaurant restaurant = findRestaurantById(restaurantId);
		
		restaurantRepository.delete(restaurant);
	}

	@Override
	public List<Restaurant> getAllRestaurant() {
		return restaurantRepository.findAll();
	}

	@Override
	public List<Restaurant> searchRestaurant(String keyword) {
		return restaurantRepository.findBySearchQuey(keyword);
	}

	@Override
	public Restaurant findRestaurantById(Long id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Restaurant getRestaurantByUser(Long userId) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public RestaurantDto addToFavorites(Long restaurantId, User user) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Restaurant updateRestaurantStatus(Long id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

}
